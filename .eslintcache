[{"/Users/isiah56/codefellows/401/store-app/src/index.js":"1","/Users/isiah56/codefellows/401/store-app/src/App.js":"2","/Users/isiah56/codefellows/401/store-app/src/reportWebVitals.js":"3","/Users/isiah56/codefellows/401/store-app/src/store/index.js":"4","/Users/isiah56/codefellows/401/store-app/src/components/header/header.js":"5","/Users/isiah56/codefellows/401/store-app/src/components/storefront/categories.js":"6","/Users/isiah56/codefellows/401/store-app/src/components/cart/simpleCart.js":"7","/Users/isiah56/codefellows/401/store-app/src/components/footer/footer.js":"8","/Users/isiah56/codefellows/401/store-app/src/components/storefront/product.js":"9","/Users/isiah56/codefellows/401/store-app/src/store/products.js":"10","/Users/isiah56/codefellows/401/store-app/src/store/categories.js":"11","/Users/isiah56/codefellows/401/store-app/src/store/cart.js":"12"},{"size":479,"mtime":1607636233250,"results":"13","hashOfConfig":"14"},{"size":593,"mtime":1608152642925,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607550985564,"results":"16","hashOfConfig":"14"},{"size":341,"mtime":1608152642929,"results":"17","hashOfConfig":"14"},{"size":1037,"mtime":1608240953502,"results":"18","hashOfConfig":"14"},{"size":1254,"mtime":1608152664216,"results":"19","hashOfConfig":"14"},{"size":1540,"mtime":1608241635761,"results":"20","hashOfConfig":"14"},{"size":262,"mtime":1607814068414,"results":"21","hashOfConfig":"14"},{"size":3089,"mtime":1608242200875,"results":"22","hashOfConfig":"14"},{"size":3660,"mtime":1608242200875,"results":"23","hashOfConfig":"14"},{"size":1322,"mtime":1608152664218,"results":"24","hashOfConfig":"14"},{"size":3068,"mtime":1608184958152,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dfglf4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/isiah56/codefellows/401/store-app/src/index.js",[],["56","57"],"/Users/isiah56/codefellows/401/store-app/src/App.js",["58","59"],"import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store/index.js';\nimport NavBar from './components/header/header.js';\nimport Categories from './components/storefront/categories.js'\nimport Products from './components/storefront/product.js'\nimport Footer from './components/footer/footer.js';\nimport SimpleCart from './components/cart/simpleCart.js';\n\n\nfunction App() {\n  return (\n    <>\n    <Provider store={ store }>\n      <NavBar />\n      \n      <Categories />\n      <Products />\n    </Provider>\n    {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default App;\n","/Users/isiah56/codefellows/401/store-app/src/reportWebVitals.js",[],"/Users/isiah56/codefellows/401/store-app/src/store/index.js",[],"/Users/isiah56/codefellows/401/store-app/src/components/header/header.js",[],"/Users/isiah56/codefellows/401/store-app/src/components/storefront/categories.js",[],"/Users/isiah56/codefellows/401/store-app/src/components/cart/simpleCart.js",["60","61"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { If, Else, Then } from 'react-if';\n\n// import { increment, decrement } from '../../store/cart.js';\nimport * as actions from '../../store/cart.js';\nimport { decrementQuantity, incrementProduct } from '../../store/products.js'\n\n\nexport default function SimpleCart() {\n\n  const dispatch = useDispatch();\n\n  //state comes from index.js\n  const currentCart = useSelector((state) => state.cart);\n  console.log(\"currentCart :::\", currentCart)\n\n\n  const addItem = (item) => {\n    dispatch(incrementProduct(item));\n  }\n\n  const deleteItem = (item) => {\n    console.log('DELETE BITCH', item)\n    dispatch(actions.removeFromCart(item));\n\n    dispatch(incrementProduct(item))\n\n  }\n\n  return (\n    <>\n\n      <ul>\n      <If condition={currentCart.cartTotalQty > 0}>\n          <Then><h2>In Cart</h2></Then>\n          <Else><></></Else>\n      </If>\n     \n        {currentCart.cartItems.map((item) => (\n      <div key={Math.random()}>\n       <If condition={item.quantity === 0}>\n         <Then><></></Then>\n           <Else>\n              {item.name}, \n              Qty: {item.quantity}\n              <button onClick={() => deleteItem(item)}>Remove item</button>\n    \n           </Else>\n        </If>\n        </div>\n        ))}\n      </ul>\n\n      {/* <h4>{currentCart.cartItems.length}</h4> */}\n      {/* <button onClick={addItem}>HELLO</button>\n      <button onClick={deleteItem}>BYE</button>\n\n      console.log('FUCK YEAH',currentCart.cartItems) */}\n    </>\n  )\n}","/Users/isiah56/codefellows/401/store-app/src/components/footer/footer.js",[],"/Users/isiah56/codefellows/401/store-app/src/components/storefront/product.js",["62"],"import React,{useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\n<<<<<<< HEAD\nimport { initialize, decrementQuantity } from '../../store/products.js'\n=======\nimport {If, Else, Then} from 'react-if';\n>>>>>>> jonny2\n\nimport SimpleCart from '../cart/simpleCart.js';\n\n\nimport { initialize, decrementQuantity, incrementProduct } from '../../store/products.js'\nimport * as actions from '../../store/cart.js'\n<<<<<<< HEAD\n=======\nimport Typography from '@material-ui/core/Typography';\n>>>>>>> jonny2\n// import * prodAction from '../products\n\nexport default function Products() {\n\n    const dispatch = useDispatch();\n\n    let productsMap = useSelector((state) => state.products.products);\n    const currentCategory = useSelector( state => state.cats.activeCategory);\n    \n  \n\n    productsMap = productsMap.filter(product => product.displayName === currentCategory);\n\n    const addItem = (item) => {\n      dispatch(actions.increment(item));// this increment cart.js\n<<<<<<< HEAD\n      console.log('HEREEEEE', actions.increment(item))\n=======\n\n    \n      dispatch(decrementQuantity(item))\n      // dispatch product decrement\n>>>>>>> jonny2\n    }\n    \n    // const minusOne = (item) => {\n    //   dispatch(decrementQuantity(item));\n    //     console.log('DISPATCH DECREMENT', decrementQuantity(item)); \n    // }\n\n  \n\n    \n    return(\n      <>\n        {/* <Typography variant=\"h5\">PRODUCTS:</Typography> */}\n        <div>\n            {/* <p >{currentCategory} ACTIVE</p> */}\n            <ul>\n                {productsMap.map((item) => (\n                <li key={Math.random()}>\n<<<<<<< HEAD\n                Name:{item.name}, \n                Description: {item.description}\n                Quantity: {item.quantity}\n                <span>\n                  <button onClick={()=> {addItem(item); decrementQuantity(item)}}>Add to cart</button>\n                </span>\n                </li> \n=======\n                <If condition={item.quantity === 0}>\n                  <Then>\n                    Name:{item.name}, \n                    Description: {item.description}\n                    Quantity: {item.sold_out}\n                  </Then>\n                    <Else>\n                      Name:{item.name}, \n                      Description: {item.description}\n                      Quantity: {item.quantity}\n                      <span>\n                        <button onClick={()=>addItem(item)}>Add to cart</button>\n                      </span>\n\n                    </Else>\n                </If>\n              </li> \n>>>>>>> jonny2\n            ))}\n            </ul> \n            <SimpleCart />\n        </div>\n        <>\n       <ul>\n         {/* {props.displayProducts.map(product => { \n          return( \n          <li key={product.name}> \n           {product.name}\n           {product.description}\n           {product.price}\n           {console.log('INVENTORY', product.inventory)}\n           <button onClick={() => props.addProductsToCart(product)}>Add to your Cart!</button>\n           </li> \n             );\n        })} */}\n      </ul>\n      </>\n      </>\n    )\n}","/Users/isiah56/codefellows/401/store-app/src/store/products.js",["63"],"const initialState = {\n  products: [{\n    name: \"TV\",\n    displayName: \"ELECTRONICS\",\n    description: \"do\",\n    quantity: 5,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"DVD\",\n    displayName: \"ELECTRONICS\",\n    description: \"fruit\",\n    quantity: 1,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"Computer\",\n    displayName: \"ELECTRONICS\",\n    description: \"do stuff\",\n    quantity: 3,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n\n  {\n    name: \"Apple\",\n    displayName: \"FOOD\",\n    description: \"do\",\n    quantity: 5,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"Orange\",\n    displayName: \"FOOD\",\n    description: \"fruit\",\n    quantity: 1,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"Banana\",\n    displayName: \"FOOD\",\n    description: \"do stuff\",\n    quantity: 3,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"Table\",\n    displayName: \"FURNITURE\",\n    description: \"do\",\n    quantity: 5,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"Chair\",\n    displayName: \"FURNITURE\",\n    description: \"fruit\",\n    quantity: 1,\n    sold_out: 'Sold OutðŸ˜£'\n  },\n  {\n    name: \"Couch\",\n    displayName: \"FURNITURE\",\n    description: \"do stuff\",\n    quantity: 3,\n    sold_out: 'Sold OutðŸ˜£'\n  }]\n}\n\n\nexport default function reducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'INITIALIZE':\n<<<<<<< HEAD\n        return{ products: state.products }\n\n    case 'DECREMENT':\n        return {...state, products: state.products}\n    //everytime this is call is take one from quantity ( -1),\n    //then write \n        \n        default:\n          return state;   \n          \n=======\n      return { products: state.products }\n\n    case 'DECREMENT':\n      let newItemsArray = state.products.map((item) => {\n        // payload is onClick and item.name is our state.products.object\n        if (payload.name === item.name) {\n          item.quantity--\n          return item\n        } else {\n          return item\n        }\n      })\n      // console.log('NEW STATE LOG',newItemsArray)\n      return { ...state, products: newItemsArray }\n\n    case 'INCREMENT_PRODUCT':\n      let newAddProductsArray = state.products.map((item) => {\n        // payload is onClick and item.name is our state.products.object\n        if (payload.name === item.name) {\n          item.quantity++\n          return item\n        } else {\n          return item\n        }\n      })\n      console.log('NEW ADD PRODUCT LIST', newAddProductsArray)\n      return { ...state, products: newAddProductsArray }\n\n    default:\n      return state;\n\n>>>>>>> jonny2\n  }\n\n}\n\nexport const initialize = (product) => {\n  return {\n    type: 'INITIALIZE',\n    payload: product\n  }\n}\n// decrement stock\nexport const decrementQuantity = (product) => {\n  return {\n    type: 'DECREMENT',\n    payload: product\n  }\n}\n\nexport const incrementProduct = (product) => {\n  return {\n    type: 'INCREMENT_PRODUCT',\n    payload: product\n  }\n}\n\n\n  export const decrementQuantity = (product) => {\n    return{\n      type: 'DECREMENT',\n      payload: product\n    }\n  }\n\n\n\n// anchor or click button for electronics\n// when electronics is clicked take me to electronics products\n// we need a button for food\n// when food is clicked take me to food products\n// import this file where we want to render\n\n\n\n//if products.quantity > 0, return.\n\n\n\n\n/**\n * when I add to car populate added item in cart list\n * add 1 to car\n * add a button to item that deletes item from cart\n * delete 1 from cart\n * add 1 to product.quantity\n *\n * If i add product to cart\n * add button adds 1 to cart\n * deletes 1 from product.quantity\n *\n * If I delete product from cart\n * -- from cart\n * ++ produce.quantity\n *\n */","/Users/isiah56/codefellows/401/store-app/src/store/categories.js",[],"/Users/isiah56/codefellows/401/store-app/src/store/cart.js",["64","65"],"const initialState = {\n  cartItems: [], // create a variable and then some logic, use varable return and change state\n  cartTotalQty: 0 // create a var and some logic use var to change state\n}\n\nexport default function reducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n\n    case 'INCREMENT_CART':\n      // this is so there aren't duplicate list items in cart\n      // we reset the quantity based on the previous state\n      const newCartItemToAdd = { ...payload };\n      if (!state.cartItems.find(item => item.name == newCartItemToAdd.name)) {\n        newCartItemToAdd.quantity = 0;\n        state.cartItems.push(newCartItemToAdd);\n      }\n\n      const newCartList = state.cartItems.map((item) => {\n        // payload is onClick and item.name is our state.products.object\n        if (newCartItemToAdd.name === item.name) {\n          item.quantity++\n          return item\n        } else {\n          return item\n        }\n      })\n\n      // new cart list is an array of objects.\n      // we do \"map\", so we can get just the quanties of each object item.\n      // we get an array of numbers = [\"6\", \"1\", \"2\", \"4\"];\n      // then we call reduce, to sum all of those quantities to get the total number of item quantities\n      // this is final cart total\n      let newTotal = newCartList.map(item => item.quantity);\n      console.log(newTotal);\n      let cartTotal = newTotal.reduce(function (a, b) {\n        console.log('CART ADD A B', a, b)\n        return a + b;\n      }, 0);\n      console.log('Cart total in inc',cartTotal);\n\n      // console.log(\"new total should be a number\", newTotal)\n\n      return { ...state, cartItems: newCartList, cartTotalQty: cartTotal }\n    // return {...state, cartItems: state.cartItems +1}\n\n    case 'DECREMENT_CART':\n\n      // return { ...state, cartItems: newCartItems, cartTotalQty: newCartTotals }\n      const newCartPayload = { ...payload };\n      if (!state.cartItems.find(item => item.name == newCartPayload.name)) {\n        newCartPayload.quantity = 0;\n        state.cartItems.push(newCartPayload);\n      }\n\n      const cartQuantity = state.cartItems.map((item) => {\n        // payload is onClick and item.name is our state.products.object\n        if (newCartPayload.name === item.name && item.quantity > 0){\n          item.quantity--\n          return item\n        } else {\n          return item\n        }\n      })\n\n  \n      let cartMap = cartQuantity.map(item => item.quantity);\n      \n      let newCartTotal = cartMap.reduce(function (a, b) {\n        console.log('CART ADD A B', a, b)\n        return a + b;\n      }, 0);\n      \n\n      // console.log(\"new total should be a number\", newTotal)\n\n      return { ...state, cartItems: cartQuantity, cartTotalQty: newCartTotal }\n        default:\n          return state;\n  }\n}\n\nexport const increment = (payload) => {\n  return {\n    type: 'INCREMENT_CART',\n    payload: payload\n  }\n}\n\nexport const removeFromCart = (payload) => {\n  console.log('EXPORT CONST DECREMENT:', payload)\n  return {\n    type: 'DECREMENT_CART',\n    payload: payload\n  }\n}",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":8,"column":8,"nodeType":"72","messageId":"73","endLine":8,"endColumn":18},{"ruleId":"70","severity":1,"message":"75","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":27},{"ruleId":"70","severity":1,"message":"76","line":19,"column":9,"nodeType":"72","messageId":"73","endLine":19,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"77","line":3,"column":2},{"ruleId":null,"fatal":true,"severity":2,"message":"78","line":74,"column":2},{"ruleId":"79","severity":1,"message":"80","line":15,"column":51,"nodeType":"81","messageId":"82","endLine":15,"endColumn":53},{"ruleId":"79","severity":1,"message":"80","line":52,"column":51,"nodeType":"81","messageId":"82","endLine":52,"endColumn":53},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'SimpleCart' is defined but never used.","'decrementQuantity' is defined but never used.","'addItem' is assigned a value but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 1 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m,\u001b[39m{useEffect} from \u001b[32m\"react\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m { useDispatch\u001b[33m,\u001b[39m useSelector } from \u001b[32m'react-redux'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mimport\u001b[39m { initialize\u001b[33m,\u001b[39m decrementQuantity } from \u001b[32m'../../store/products.js'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m\u001b[36mimport\u001b[39m {\u001b[33mIf\u001b[39m\u001b[33m,\u001b[39m \u001b[33mElse\u001b[39m\u001b[33m,\u001b[39m \u001b[33mThen\u001b[39m} from \u001b[32m'react-if'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 72 | \u001b[39m  \u001b[36mswitch\u001b[39m (type) {\u001b[0m\n\u001b[0m \u001b[90m 73 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[32m'INITIALIZE'\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 74 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 75 | \u001b[39m        \u001b[36mreturn\u001b[39m{ products\u001b[33m:\u001b[39m state\u001b[33m.\u001b[39mproducts }\u001b[0m\n\u001b[0m \u001b[90m 76 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 77 | \u001b[39m    \u001b[36mcase\u001b[39m \u001b[32m'DECREMENT'\u001b[39m\u001b[33m:\u001b[39m\u001b[0m","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]